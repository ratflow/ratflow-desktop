#!/bin/bash
## $SCRIPT_NAME v$SCRIPT_VERSION
##
## Reload ratflow config by joining xx-<name> files
## from ~/.config/ratflow/profiles/current/config.d
## and evaluating shell expressions within ${{}} tags.
## The 'i3-msg reload' will be executed afterwards.
##
## Usage: $SCRIPT_FILENAME [options]
##
## Options:
##   -p, --profile <profile>   Change current profile
##   -n, --no-apply            Generate config but do reload result file
##   -i, --info                Show current profile info
##   -h, --help                Display this message.
##   -v, --version             Display script version.
##

#===========================================


SCRIPT_NAME=rfreload
SCRIPT_FILENAME=$(basename "$0")
SCRIPT_VERSION=0.1.0
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

set -e          # exit on command errors (so you MUST handle exit codes properly!)
set -o pipefail # capture fail exit codes in piped commands
#set -x         # execution tracing debug messages

#===========================================

CONFIG_DIR="$HOME/.config/ratflow"
RESULT_FILE="$CONFIG_DIR/config"
TMP_FILE="${RESULT_FILE}.tmp"
CURRENT_PROFILE="$CONFIG_DIR/profiles/current"
DEFAULT_PROFILE="$CONFIG_DIR/profiles/default"
PROFILE_CONFIG_DIR="$CURRENT_PROFILE/config.d"

customProfile=
reloadConfig=true

#===========================================


function usage {
  [ "$*" ] && echo "$0: $*"
  sed -n '/^##/,/^$/s/^## \{0,1\}//p' "$SCRIPT_DIR/$SCRIPT_FILENAME" |
      sed "s/\$SCRIPT_NAME/$SCRIPT_NAME/g" |
      sed "s/\$SCRIPT_FILENAME/$SCRIPT_FILENAME/g" |
      sed "s/\$SCRIPT_VERSION/$SCRIPT_VERSION/g"
      
  exit 2
} 2>/dev/null


function main
{   
    while [ $# -gt 0 ]; do
	case $1 in
	    ('-h'|'--help')
		usage 2>&1;;
            ('-v'|'--version')
                echo "$SCRIPT_NAME v$SCRIPT_VERSION"
                exit 0;;
        ('-i'|'--info')
		showInfo
		exit 0;;
	    ('-p'|'--profile')
		shift
		customProfile="$1";;
        ('-n'|'--no-apply')        
		reloadConfig=false;;
	    ('--')
		shift
		break;;
	    ('-'*)
		echo -e "\n$0 $1: unknown option. Use --help to learn more.\n"
		exit 3
		break;;
	esac
	
	shift
    done

    run
}

#===========================================


function run
{

    if [ ! -z "$customProfile" ]; then
	updateCurrentProfile
    fi

    useDefaultIfNoCurrent
    generateConfigFile
    
    if [ $reloadConfig == true ]; then
        reloadConfigFile
    fi
}

function updateCurrentProfile
{
    profilePath=$"${CONFIG_DIR}/profiles/$customProfile"
    if [ -d "$profilePath" ]; then
	echo "Setting $customProfile as current profile"
	#rm "$CURRENT_PROFILE"
	ln -Tvsf "$profilePath" "$CURRENT_PROFILE"
    else
	echo "Cannot use given profile, $profilePath directory not found"
	exit 1
    fi
}

function useDefaultIfNoCurrent
{
    if [ ! -d "$CURRENT_PROFILE" ]; then
	echo "Setting default profile as current profile"
	ln -vsf "$DEFAULT_PROFILE" "$CURRENT_PROFILE"
    fi
}

function generateConfigFile
{
    echo \
"
#################################################################
#                   DO NOT EDIT THIS FILE
#
# This file has been generated by ${SCRIPT_NAME} script.
# Source files can be edited before calling ${SCRIPT_NAME} in:
# ${CURRENT_PROFILE}/config.d
#
# Run '${SCRIPT_NAME} -i' to print complete config file list.
#
# Use \${{<command>}} syntax to include shell command result 
# in configuration file content. Environment variables can be
# added to <profile>/env file. Run '${SCRIPT_NAME}' to reload
# current profile. See '${SCRIPT_NAME} --help' to learn more.
#
#################################################################

" > "${TMP_FILE}"
 
 
    . "$CURRENT_PROFILE/env"
    
    for file in "${PROFILE_CONFIG_DIR}/"??-*
    do
        echo "Joining file: $file"
        echo -e "#################################################################\n# ${file}:\n" >> "${TMP_FILE}"
        cat "$file" | \
            perl -pe 's[\$\{\{(.*?)\}\}][ qx($1) =~ s/\n$//r ]ge' >> "${TMP_FILE}"
    
    done
    
    mv -f "${TMP_FILE}" "${RESULT_FILE}"
}

function reloadConfigFile
{
    i3-msg reload
}

function showInfo
{
    realPath=$(readlink "$CURRENT_PROFILE")
    profileName=$(basename "$realPath")
    echo -e "\nCurrent profile: $profileName\n\nConfig components:"
    ls -1 "$realPath/config.d"/??-*
}

#===========================================

main "$@"


